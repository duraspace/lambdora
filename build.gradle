buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.ltgt.gradle:gradle-errorprone-plugin:0.0.13"
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.12"
    }
}

ext {
    jenaVersion = '3.4.0'
    daggerVersion = '2.12'
}

allprojects {
    group 'org.fcrepo.lambdora'
    version '0.1.0-SNAPSHOT'
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'net.ltgt.errorprone'
    apply plugin: 'net.ltgt.apt'
    apply plugin: 'idea'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    checkstyle {
        configFile = rootProject.file('config/checkstyle/checkstyle.xml')
        configProperties = [
                'configDir': rootProject.file('config/checkstyle'),
                'baseDir'  : rootDir,
        ]
        toolVersion = '7.3'
    }

    dependencies {
        testCompile(
                'junit:junit:4.12',
                'com.amazonaws:DynamoDBLocal:1.11.0',
                'org.mockito:mockito-core:2.+'
        )
    }

    repositories {
        mavenCentral()
        maven {
            url 'http://dynamodb-local.s3-website-us-west-2.amazonaws.com/release'
        }
    }

    task copyNativeDeps(type: Copy) {
        from(configurations.testCompile) {
            include "*.dylib"
            include "*.so"
            include "*.dll"
        }
        into 'build/libs'
    }

    test.dependsOn copyNativeDeps
    test.doFirst {
        systemProperty "java.library.path", 'build/libs'
    }

    //ensures that idea sees the generated source files in the src classpath
    def generated = new File(buildDir, "generated/source/apt/main")
    idea.module.sourceDirs += generated

}

project(':lambdora-http-api') {
    dependencies {
        compile project(':lambdora-service')
        compile(
                'com.amazonaws:aws-lambda-java-core:1.1.0',
                'com.amazonaws:aws-lambda-java-log4j:1.0.0',
                'com.amazonaws.serverless:aws-serverless-java-container-core:0.7',
                'com.amazonaws.serverless:aws-serverless-java-container-jersey:0.7',
                'com.fasterxml.jackson.core:jackson-core:2.9.2',
                'com.fasterxml.jackson.core:jackson-databind:2.9.2',
                'com.fasterxml.jackson.core:jackson-annotations:2.9.2',
                'org.apache.httpcomponents:httpcore:4.4.8',
                'org.apache.httpcomponents:httpmime:4.5.3',
                'org.apache.velocity:velocity:1.7',
                'org.glassfish.jersey.media:jersey-media-multipart:2.24',
                'javax.ws.rs:javax.ws.rs-api:2.1'
        )
    }

    // http://docs.aws.amazon.com/lambda/latest/dg/create-deployment-pkg-zip-java.html
    task buildZip(type: Zip) {
        baseName = "${project.name}"
        from compileJava
        from processResources
        into('lib') {
            from configurations.runtime
        }
    }

    build.dependsOn buildZip
}

project(':lambdora-service') {
    dependencies {
        compile project(':lambdora-common')
        compile(
                "org.apache.jena:jena-core:${jenaVersion}",
                "org.apache.jena:jena-iri:${jenaVersion}",
                "org.apache.jena:jena-arq:${jenaVersion}",
                'com.amazonaws:aws-java-sdk-dynamodb:1.11.218',
                "com.google.dagger:dagger:${daggerVersion}"
        )

        apt "com.google.dagger:dagger-compiler:${daggerVersion}"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'
}
